---
import type { StreamGuestInfo } from "../utils/schedule-utils";
import {
  getLocalizedDate,
  getHeadingId,
  type CfeScheduleItem,
} from "../utils/schedule-utils";
import WebsiteLink from "./WebsiteLink.astro";
import TwitterLink from "./TwitterLink.astro";
import GitHubLink from "./GitHubLink.astro";
import TwitchLink from "./TwitchLink.astro";
import YouTubeLink from "./YouTubeLink.astro";
import StreamLinks from "./StreamLinks.astro";
import HeadingAnchor from "./HeadingAnchor.astro";
import { getYouTubeId } from "../utils/youtube-utils";

interface Props {
  locale: string;
  timezone: string;
  schedule: StreamGuestInfo[];
  cfeSchedule: CfeScheduleItem[];
}

const { locale, timezone, schedule, cfeSchedule } = Astro.props;

const fullSchedule: Array<StreamGuestInfo | CfeScheduleItem> = [
  ...cfeSchedule,
  ...schedule,
].sort((a, b) => {
  return new Date(a.date).getTime() - new Date(b.date).getTime();
});
---

<ul class="flex flex-col gap-16">
  {
    fullSchedule.map((scheduleItem) => {
      const { date, title, description } = scheduleItem;
      const guestDate = getLocalizedDate({
        date,
        locale,
        timezone,
        showTime: true,
      });

      let youtubeStreamLink,
        linkedinStreamLink,
        guestName,
        guestTitle,
        twitter,
        website,
        twitch,
        youtube,
        github,
        cfeLink,
        ogImage;

      if (scheduleItem.type === "nickyt.live") {
        guestName = scheduleItem.guestName;
        guestTitle = scheduleItem.guestTitle;
        youtubeStreamLink = scheduleItem.youtubeStreamLink;
        linkedinStreamLink = scheduleItem.linkedinStreamLink;
        twitter = scheduleItem.twitter;
        website = scheduleItem.website;
        twitch = scheduleItem.twitch;
        youtube = scheduleItem.youtube;
        github = scheduleItem.github;
      } else {
        guestName = "2Full2Stack";
        cfeLink = scheduleItem.link;
        ogImage = scheduleItem.ogImage;
      }

      const headingId = getHeadingId(guestName, date);
      const videoId = youtubeStreamLink
        ? getYouTubeId(youtubeStreamLink)
        : null;

      return (
        <li class="flex flex-col gap-4 [&_h2]:odd:text-purple-600 [&_h2]:text-pink-600 [&_a:hover]:text-pink-600 [&_a:hover]:odd:text-purple-600 [&_a:hover]:odd:decoration-purple-600">
          <div class="grid gap-4">
            <div>
              <h2 id={headingId} class="flex gap-2 items-center mb-2">
                {guestName === "2Full2Stack"
                  ? `2 Full 2 Stack: ${title}`
                  : title}
                <HeadingAnchor headingId={headingId} />
              </h2>
              <time datetime={date} class="italic">
                {guestDate}
              </time>
              <div>
                {github === "nickytonline" ||
                guestName === "2Full2Stack" ? null : (
                  <div>
                    Guest: {guestName}
                    {guestTitle ? `, ${guestTitle}` : null}
                  </div>
                )}
              </div>
            </div>
            {videoId || ogImage ? (
              <img
                src={
                  videoId
                    ? `https://img.youtube.com/vi/${videoId}/maxresdefault.jpg`
                    : ogImage
                }
                alt=""
                class={`my-2 rounded-md w-[270px] md:w-[540px] aspect-video border${videoId ? " border-pink-300" : ""}`}
              />
            ) : null}
            {description ? <p set:html={description} /> : null}
          </div>
          <nav class="nav" aria-label="Links for live stream guest ${name}">
            <ul class="flex gap-2 items-center">
              {website ? (
                <li>
                  <WebsiteLink name={guestName} url={website} />
                </li>
              ) : null}
              {github ? (
                <li>
                  <GitHubLink name={guestName} url={github} />
                </li>
              ) : null}
              {twitter ? (
                <li>
                  <TwitterLink name={guestName} url={twitter} />
                </li>
              ) : null}

              {twitch ? (
                <li>
                  <TwitchLink name={guestName} url={twitch} />
                </li>
              ) : null}
              {youtube ? (
                <li>
                  <YouTubeLink name={guestName} url={youtube} />
                </li>
              ) : null}
            </ul>
          </nav>
          <StreamLinks
            cfeLink={cfeLink}
            youtubeUrl={youtubeStreamLink}
            linkedinUrl={linkedinStreamLink}
          />
        </li>
      );
    })
  }
</ul>
