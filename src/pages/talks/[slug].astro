---
import { getEntry, getCollection } from "astro:content";
import Layout from "../../layouts/MainLayout.astro";
import TagList from "../../components/TagList.astro";
import { getRelatedTalks } from "../../utils/tag-utils";

const { slug } = Astro.params;

if (!slug) {
  throw new Error("Talk not found");
}

const talk = await getEntry("talks", slug);

if (!talk) {
  throw new Error("Talk not found");
}

// Get all talks to find related ones
const allTalks = await getCollection("talks");
const relatedTalks = getRelatedTalks(talk, allTalks, 3);

const {
  title,
  date,
  venue,
  tags = [],
  video,
  slideDeck,
  sourceCode,
  additionalLinks = [],
} = talk.data;
---

<Layout title={`${title} | Nick Taylor`}>
  <main class="mt-4 md:mt-8 lg:mt-16">
    <article class="max-w-3xl grid gap-8">
      <header>
        <h1
          class="text-4xl font-extrabold leading-tight mb-2 relative inline-block"
        >
          {title}
        </h1>
        <div class="text-2xl text-gray-600 mt-2 relative inline-block">
          <time datetime={date}>
            {
              new Date(date).toLocaleDateString("en-US", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })
            }
          </time>
          {` \u2022 `}
          <a href={venue.url} target="_blank">
            {venue.name}
          </a>
        </div>
      </header>

      {
        video && (
          <div class="my-4">
            {video.type === "youtube" && (
              <iframe
                width="560"
                height="315"
                src={
                  video.url.includes("youtu.be/")
                    ? video.url
                        .replace("youtu.be/", "www.youtube.com/embed/")
                        .replace("&t=", "?start=")
                    : video.url
                        .replace("watch?v=", "embed/")
                        .replace("&t=", "?start=")
                }
                title="YouTube video player"
                frameborder="0"
                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                allowfullscreen
                class="w-full max-w-2xl aspect-video rounded shadow"
              />
            )}
            {video.type === "vimeo" && (
              <iframe
                src={video.url.replace("vimeo.com/", "player.vimeo.com/video/")}
                width="640"
                height="360"
                frameborder="0"
                allow="autoplay; fullscreen; picture-in-picture"
                allowfullscreen
                class="w-full max-w-2xl aspect-video rounded shadow"
                title="Vimeo video player"
              />
            )}
            {video.type === "custom" && video.image && (
              <a href={video.url} target="_blank" rel="noopener noreferrer">
                <img
                  src={video.image.url}
                  width={video.image.width}
                  height={video.image.height}
                  alt="Talk video preview"
                  class="rounded shadow mx-auto"
                />
              </a>
            )}
          </div>
        )
      }
      {
        !video && (
          <div class="text-center text-gray-600">
            No video available for this talk
          </div>
        )
      }

      <div class="prose max-w-none" set:html={talk.body} />

      <footer class="flex flex-wrap gap-4 mt-6">
        <ul class="flex flex-wrap gap-4">
          {
            slideDeck && (
              <li>
                <a href={slideDeck} target="_blank">
                  View Slides
                </a>
              </li>
            )
          }
          {
            sourceCode && (
              <li>
                <a href={sourceCode} target="_blank">
                  Source Code
                </a>
              </li>
            )
          }
          {
            additionalLinks.map((link: { title: string; url: string }) => (
              <li>
                <a
                  href={link.url}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-flex items-center gap-2 text-sm text-blue-600 hover:text-blue-800"
                >
                  {link.title}
                </a>
              </li>
            ))
          }
        </ul>
      </footer>

      <div class="flex flex-wrap gap-2 mt-4">
        <TagList tags={tags} />
      </div>

      {
        relatedTalks.length > 0 && (
          <section class="mt-12 border-t pt-6">
            <h2 class="text-2xl font-bold mb-4">Related Talks</h2>
            <ul class="grid gap-4">
              {relatedTalks.map((relatedTalk) => {
                const relatedSlug = relatedTalk.id
                  .replace(/^talks\//, "")
                  .replace(/\.mdx?$/, "");
                return (
                  <li>
                    <a href={`/talks/${relatedSlug}`} class="hover:underline">
                      <article>
                        <h3 class="font-medium">{relatedTalk.data.title}</h3>
                        <div class="text-sm text-gray-600">
                          <time datetime={relatedTalk.data.date}>
                            {new Date(relatedTalk.data.date).toLocaleDateString(
                              "en-US",
                              {
                                year: "numeric",
                                month: "long",
                                day: "numeric",
                              }
                            )}
                          </time>
                          {" \u2022 "}
                          {relatedTalk.data.venue.name}
                        </div>
                        <div class="mt-1">
                          <TagList
                            tags={relatedTalk.data.tags || []}
                            limit={3}
                          />
                        </div>
                      </article>
                    </a>
                  </li>
                );
              })}
            </ul>
          </section>
        )
      }
    </article>
  </main>
</Layout>
