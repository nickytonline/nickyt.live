---
import { getCollection } from "astro:content";
import Layout from "../../layouts/MainLayout.astro";
export const prerender = true;

const talks = await getCollection("talks");

// Extract all unique tags and count their occurrences
const tagCounts = new Map<string, number>();
const tagToOriginalCase = new Map<string, string>();

talks.forEach((talk) => {
  if (talk.data.tags) {
    talk.data.tags.forEach((tag) => {
      const normalizedTag = tag.toLowerCase().replace(/\s+/g, '');
      tagCounts.set(normalizedTag, (tagCounts.get(normalizedTag) || 0) + 1);
      tagToOriginalCase.set(normalizedTag, tag);
    });
  }
});

// Sort tags by frequency (most frequent first)
const sortedTags = Array.from(tagCounts.entries()).sort((a, b) => b[1] - a[1]);

// Create alphabetical list for alphabetical view
const alphabeticalTags = [...sortedTags].sort((a, b) =>
  a[0].localeCompare(b[0]),
);
---

<Layout title="Talk Tags | Nick Taylor">
  <main class="mt-4 md:mt-8 lg:mt-16">
    <div class="grid gap-8">
      <header>
        <h1>Talk Tags</h1>
        <p class="text-gray-600">Browse talks by topic</p>
      </header>

      <section class="mb-12">
        <h2 class="text-2xl font-bold mb-4">Popular Tags</h2>
        <div class="flex flex-wrap gap-4">
          {
            sortedTags.slice(0, 10).map(([tag, count]) => (
              <a
                href={`/tags/${tag}`}
                class="bg-gray-100 hover:bg-gray-200 text-gray-800 rounded-full px-4 py-2 transition-colors"
              >
                <span class="font-medium">{tagToOriginalCase.get(tag) || tag}</span>
                <span class="ml-2 text-sm bg-gray-200 text-gray-700 rounded-full px-2 py-1">
                  {count}
                </span>
              </a>
            ))
          }
        </div>
      </section>

      <section>
        <h2 class="text-2xl font-bold mb-4">All Tags</h2>
        <div class="flex flex-wrap gap-4">
          {
            alphabeticalTags.map(([tag, count]) => (
              <a
                href={`/tags/${tag}`}
                class="bg-gray-100 hover:bg-gray-200 text-gray-800 rounded-full px-4 py-2 transition-colors"
              >
                <span class="font-medium">{tagToOriginalCase.get(tag) || tag}</span>
                <span class="ml-2 text-sm bg-gray-200 text-gray-700 rounded-full px-2 py-1">
                  {count}
                </span>
              </a>
            ))
          }
        </div>
      </section>

      {sortedTags.length === 0 && <p class="text-gray-600">No tags found.</p>}
    </div>
  </main>
</Layout>
